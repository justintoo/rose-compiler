#!/usr/bin/env bash

#--------------------------------------------------------------------
# import: avoid double inclusion
#--------------------------------------------------------------------
if test "${Import__imported+defined}" == "defined"
then
    return 0
fi
Import__imported=1
#--------------------------------------------------------------------

set -o nounset

function import() { 
    # @description importer routine to get external functionality.
    # @description the first location searched is the script directory.
    # @description if not found, search the module in the paths contained in $SHELL_LIBRARY_PATH environment variable
    # @param $1 the .shinc file to import, without .shinc extension
    module="$1"

    if test "x$module" == "x"
    then
        echo "$script_name : Unable to import unspecified module. Aborting..."
        exit 1
    fi

    if test "x${ROSE_SH_SCRIPTS_DIR}:-notset}" == "xnotset"
    then
        echo "$script_name : Undefined script absolute dir. Did you remove getScriptAbsoluteDir? Dying."
        exit 1
    fi

    if test "x${ROSE_SH_SCRIPTS_DIR}" == "x"
    then
        echo "$script_name : empty script path. Dying."
        exit 1
    fi

    if test -e "${ROSE_SH_SCRIPTS_DIR}/$module.shinc"
    then
        # import from script directory
        . "${ROSE_SH_SCRIPTS_DIR}/$module.shinc"
        return
    elif test "x${SHELL_LIBRARY_PATH:-notset}" != "xnotset"
    then
        # import from the shell script library path
        # save the separator and use the ':' instead
        local saved_IFS="$IFS"
        IFS=':'
        for path in $SHELL_LIBRARY_PATH
        do
            if test -e "$path/$module.shinc"
            then
                . "$path/$module.shinc"

                # restore the standard separator
                IFS="$saved_IFS"

                return
            fi
        done
        # restore the standard separator
        IFS="$saved_IFS"
    fi
    echo "Unable to find module $module."
    exit 1
}
